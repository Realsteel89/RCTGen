#pragma once

#include <jansson.h>
#include <model.h>
#include <renderer.h>

#define TILE_SIZE 3.3//3.67423461417477
#define CLEARANCE_HEIGHT (0.20412414523*TILE_SIZE)

enum
{
	TRACK_DIAGONAL=1,
	TRACK_VERTICAL=2,
	TRACK_EXTRUDE_BEHIND=4,
	TRACK_ENTRY_BANK_LEFT=8,
	TRACK_ENTRY_BANK_RIGHT=16,
	TRACK_EXIT_BANK_LEFT=32,
	TRACK_EXIT_BANK_RIGHT=64,
	TRACK_EXIT_45_DEG_LEFT=128,
	TRACK_EXIT_45_DEG_RIGHT=256,
	TRACK_EXIT_90_DEG_LEFT=512,
	TRACK_EXIT_90_DEG_RIGHT=1024,
	TRACK_EXIT_180_DEG=2048,
	TRACK_ALT_PREFER_ODD=4096,
	TRACK_ALT_INVERT=8192,
	TRACK_NO_SUPPORTS=16384,
	TRACK_OFFSET_SPRITE_MASK=32768,
	TRACK_SUPPORT_BASE=65536,
	TRACK_DIAGONAL_2=131072,
	TRACK_EXTRUDE_IN_FRONT=262144,
	TRACK_SPECIAL_STEEP_TO_VERTICAL=0x01000000,
	TRACK_SPECIAL_VERTICAL_TO_STEEP=0x02000000,
	TRACK_SPECIAL_VERTICAL=0x03000000,
	TRACK_SPECIAL_VERTICAL_TWIST_LEFT=0x04000000,
	TRACK_SPECIAL_VERTICAL_TWIST_RIGHT=0x05000000,
	TRACK_SPECIAL_BARREL_ROLL_LEFT=0x06000000,
	TRACK_SPECIAL_BARREL_ROLL_RIGHT=0x07000000,
	TRACK_SPECIAL_HALF_LOOP=0x08000000,
	TRACK_SPECIAL_QUARTER_LOOP=0x09000000,
	TRACK_SPECIAL_CORKSCREW_LEFT=0x0A000000,
	TRACK_SPECIAL_CORKSCREW_RIGHT=0x0B000000,
	TRACK_SPECIAL_ZERO_G_ROLL_LEFT=0x0C000000,
	TRACK_SPECIAL_ZERO_G_ROLL_RIGHT=0x0D000000,
	TRACK_SPECIAL_LARGE_ZERO_G_ROLL_LEFT=0x0E000000,
	TRACK_SPECIAL_LARGE_ZERO_G_ROLL_RIGHT=0x0F000000,
	TRACK_SPECIAL_BRAKE=0x10000000,
	TRACK_SPECIAL_BLOCK_BRAKE=0x11000000,
	TRACK_SPECIAL_BOOSTER=0x12000000,
	TRACK_SPECIAL_MAGNETIC_BRAKE=0x13000000,
	TRACK_SPECIAL_LAUNCHED_LIFT=0x014000000,
	TRACK_SPECIAL_VERTICAL_BOOSTER=0x015000000,
	TRACK_SPECIAL_MASK=0xFF000000
};

#define TRACK_EXIT_90_DEG (TRACK_EXIT_90_DEG_LEFT|TRACK_EXIT_90_DEG_RIGHT)
#define TRACK_EXIT_45_DEG (TRACK_EXIT_45_DEG_LEFT|TRACK_EXIT_45_DEG_RIGHT)
#define TRACK_BANK_LEFT (TRACK_ENTRY_BANK_LEFT|TRACK_EXIT_BANK_LEFT)
#define TRACK_BANK_RIGHT (TRACK_ENTRY_BANK_RIGHT|TRACK_EXIT_BANK_RIGHT)

enum
{
	VIEW_NEEDS_TRACK_MASK=1,
};

enum
{
	TRACK_MASK_NONE=0,
	TRACK_MASK_DIFFERENCE,
	TRACK_MASK_INTERSECT,
	TRACK_MASK_TRANSFER_NEXT
};

enum track_flags
{
	TRACK_HAS_LIFT=1,
	TRACK_HAS_SUPPORTS=2,
	TRACK_SEPARATE_TIE=4,
	TRACK_TIE_AT_BOUNDARY=8,
	TRACK_SPECIAL_OFFSETS=16
};

enum track_groups
{
	TRACK_GROUP_FLAT=0x1,
	TRACK_GROUP_BRAKES=0x2,
	TRACK_GROUP_GENTLE_SLOPES=0x4,
	TRACK_GROUP_STEEP_SLOPES=0x8,
	TRACK_GROUP_VERTICAL_SLOPES=0x10,
	TRACK_GROUP_TURNS=0x20,
	TRACK_GROUP_SLOPED_TURNS=0x40,
	TRACK_GROUP_DIAGONALS=0x80,
	TRACK_GROUP_BANKED_TURNS=0x100,
	TRACK_GROUP_BANKED_SLOPED_TURNS=0x200,
	TRACK_GROUP_S_BENDS=0x400,
	TRACK_GROUP_HELICES=0x800,
	TRACK_GROUP_LARGE_SLOPE_TRANSITIONS=0x1000,
	TRACK_GROUP_BARREL_ROLLS=0x2000,
	TRACK_GROUP_INLINE_TWISTS=0x4000,
	TRACK_GROUP_HALF_LOOPS=0x8000,
	TRACK_GROUP_QUARTER_LOOPS=0x10000,
	TRACK_GROUP_CORKSCREWS=0x20000,
	TRACK_GROUP_LARGE_CORKSCREWS=0x40000,
	TRACK_GROUP_BOOSTERS=0x80000,
	TRACK_GROUP_LAUNCHED_LIFTS=0x100000,
	TRACK_GROUP_TURN_BANK_TRANSITIONS=0x200000,
	TRACK_GROUP_MEDIUM_HALF_LOOPS=0x400000,
	TRACK_GROUP_LARGE_HALF_LOOPS=0x800000,
	TRACK_GROUP_ZERO_G_ROLLS=0x1000000,
	TRACK_GROUP_SMALL_SLOPE_TRANSITIONS=0x2000000,
	TRACK_GROUP_STEEP_SLOPED_TURNS=0x4000000,
	TRACK_GROUP_LARGE_SLOPED_TURNS=0x8000000,
	TRACK_GROUP_LARGE_BANKED_SLOPED_TURNS=0x10000000,
	TRACK_GROUP_VERTICAL_LOOPS=0x20000000,
	TRACK_GROUP_VERTICAL_BOOSTERS=0x40000000,
	TRACK_GROUP_DIAGONAL_BRAKES=0x80000000,
	TRACK_GROUP_SLOPED_BRAKES=0x100000000,
	TRACK_GROUP_MAGNETIC_BRAKES=0x200000000,
	TRACK_GROUP_DIAGONAL_VERTICALS=0x400000000,
	TRACK_GROUP_BANKED_S_BENDS=0x800000000,
	TRACK_GROUP_BLOCK_BRAKES=0x1000000000,
	TRACK_GROUP_DIVE_LOOPS=0x2000000000,
};

enum models
{
	MODEL_TRACK_ALT,
	MODEL_FLAT,
	MODEL_BANK_SIXTH,
	MODEL_BANK_THIRD,
	MODEL_BANK_HALF,
	MODEL_BANK_TWO_THIRDS,
	MODEL_BANK_FIVE_SIXTHS,
	MODEL_BANK,
	MODEL_BASE,
	MODEL_SPECIAL_BRAKE,
	MODEL_SPECIAL_BLOCK_BRAKE,
	MODEL_SPECIAL_BOOSTER,
	MODEL_SPECIAL_MAGNETIC_BRAKE,
	MODEL_SPECIAL_STEEP_TO_VERTICAL,
	MODEL_SPECIAL_VERTICAL_TO_STEEP,
	MODEL_SPECIAL_VERTICAL,
	MODEL_SPECIAL_VERTICAL_TWIST,
	MODEL_SPECIAL_BARREL_ROLL,
	MODEL_SPECIAL_HALF_LOOP,
	MODEL_SPECIAL_QUARTER_LOOP,
	MODEL_SPECIAL_CORKSCREW,
	MODEL_SPECIAL_ZERO_G_ROLL,
	MODEL_SPECIAL_LARGE_ZERO_G_ROLL
};

enum offsets
{
OFFSET_FLAT=0,
OFFSET_GENTLE=1,
OFFSET_STEEP=2,
OFFSET_BANK=3,
OFFSET_GENTLE_BANK=4,
OFFSET_INVERTED=5,
OFFSET_DIAGONAL=6,
OFFSET_DIAGONAL_BANK=7,
OFFSET_DIAGONAL_GENTLE=8,
OFFSET_DIAGONAL_STEEP=9
};

enum track_section_id {
	FLAT,
	FLAT_ASYMMETRIC,
	BRAKE,
	BRAKE_DIAG,
	BRAKE_GENTLE,
	BRAKE_GENTLE_DIAG,
	MAGNETIC_BRAKE,
	MAGNETIC_BRAKE_DIAG,
	MAGNETIC_BRAKE_GENTLE,
	MAGNETIC_BRAKE_GENTLE_DIAG,
	BLOCK_BRAKE,
	BLOCK_BRAKE_DIAG,
	BOOSTER,
	FLAT_TO_GENTLE,
	GENTLE_TO_FLAT,
	GENTLE,
	GENTLE_TO_STEEP,
	STEEP_TO_GENTLE,
	STEEP,
	STEEP_TO_VERTICAL,
	VERTICAL_TO_STEEP,
	VERTICAL,
	SMALL_TURN_LEFT,
	MEDIUM_TURN_LEFT,
	LARGE_TURN_LEFT_TO_DIAG,
	LARGE_TURN_RIGHT_TO_DIAG,
	FLAT_DIAG,
	FLAT_TO_GENTLE_DIAG,
	GENTLE_TO_FLAT_DIAG,
	GENTLE_DIAG,
	GENTLE_TO_STEEP_DIAG,
	STEEP_TO_GENTLE_DIAG,
	STEEP_DIAG,
	FLAT_TO_LEFT_BANK,
	FLAT_TO_RIGHT_BANK,
	LEFT_BANK_TO_GENTLE,
	RIGHT_BANK_TO_GENTLE,
	GENTLE_TO_LEFT_BANK,
	GENTLE_TO_RIGHT_BANK,
	LEFT_BANK,
	FLAT_TO_LEFT_BANK_DIAG,
	FLAT_TO_RIGHT_BANK_DIAG,
	LEFT_BANK_TO_GENTLE_DIAG,
	RIGHT_BANK_TO_GENTLE_DIAG,
	GENTLE_TO_LEFT_BANK_DIAG,
	GENTLE_TO_RIGHT_BANK_DIAG,
	LEFT_BANK_DIAG,
	SMALL_TURN_LEFT_BANK,
	MEDIUM_TURN_LEFT_BANK,
	LARGE_TURN_LEFT_TO_DIAG_BANK,
	LARGE_TURN_RIGHT_TO_DIAG_BANK,
	SMALL_TURN_LEFT_GENTLE,
	SMALL_TURN_RIGHT_GENTLE,
	MEDIUM_TURN_LEFT_GENTLE,
	MEDIUM_TURN_RIGHT_GENTLE,
	VERY_SMALL_TURN_LEFT_STEEP,
	VERY_SMALL_TURN_RIGHT_STEEP,
	VERTICAL_TWIST_LEFT,
	VERTICAL_TWIST_RIGHT,
	GENTLE_TO_GENTLE_LEFT_BANK,
	GENTLE_TO_GENTLE_RIGHT_BANK,
	GENTLE_LEFT_BANK_TO_GENTLE,
	GENTLE_RIGHT_BANK_TO_GENTLE,
	LEFT_BANK_TO_GENTLE_LEFT_BANK,
	RIGHT_BANK_TO_GENTLE_RIGHT_BANK,
	GENTLE_LEFT_BANK_TO_LEFT_BANK,
	GENTLE_RIGHT_BANK_TO_RIGHT_BANK,
	GENTLE_LEFT_BANK,
	GENTLE_RIGHT_BANK,
	FLAT_TO_GENTLE_LEFT_BANK,
	FLAT_TO_GENTLE_RIGHT_BANK,
	GENTLE_LEFT_BANK_TO_FLAT,
	GENTLE_RIGHT_BANK_TO_FLAT,
	SMALL_TURN_LEFT_BANK_GENTLE,
	SMALL_TURN_RIGHT_BANK_GENTLE,
	MEDIUM_TURN_LEFT_BANK_GENTLE,
	MEDIUM_TURN_RIGHT_BANK_GENTLE,
	S_BEND_LEFT,
	S_BEND_RIGHT,
	S_BEND_LEFT_BANK,
	S_BEND_RIGHT_BANK,
	SMALL_HELIX_LEFT,
	SMALL_HELIX_RIGHT,
	MEDIUM_HELIX_LEFT,
	MEDIUM_HELIX_RIGHT,
	BARREL_ROLL_LEFT,
	BARREL_ROLL_RIGHT,
	INLINE_TWIST_LEFT,
	INLINE_TWIST_RIGHT,
	HALF_LOOP,
	VERTICAL_LOOP_LEFT,
	VERTICAL_LOOP_RIGHT,
	MEDIUM_HALF_LOOP_LEFT,
	MEDIUM_HALF_LOOP_RIGHT,
	LARGE_HALF_LOOP_LEFT,
	LARGE_HALF_LOOP_RIGHT,
	FLAT_TO_STEEP,
	STEEP_TO_FLAT,
	FLAT_TO_STEEP_DIAG,
	STEEP_TO_FLAT_DIAG,
	SMALL_FLAT_TO_STEEP,
	SMALL_STEEP_TO_FLAT,
	SMALL_FLAT_TO_STEEP_DIAG,
	SMALL_STEEP_TO_FLAT_DIAG,
	QUARTER_LOOP,
	CORKSCREW_LEFT,
	CORKSCREW_RIGHT,
	LARGE_CORKSCREW_LEFT,
	LARGE_CORKSCREW_RIGHT,
	ZERO_G_ROLL_LEFT,
	ZERO_G_ROLL_RIGHT,
	LARGE_ZERO_G_ROLL_LEFT,
	LARGE_ZERO_G_ROLL_RIGHT,
	DIVE_LOOP_45_LEFT,
	DIVE_LOOP_45_RIGHT,
	DIVE_LOOP_90_LEFT,
	DIVE_LOOP_90_RIGHT,
	SMALL_TURN_LEFT_BANK_TO_GENTLE,
	SMALL_TURN_RIGHT_BANK_TO_GENTLE,
	LAUNCHED_LIFT,
	LARGE_TURN_LEFT_TO_DIAG_GENTLE,
	LARGE_TURN_RIGHT_TO_DIAG_GENTLE,
	LARGE_TURN_LEFT_TO_ORTHOGONAL_GENTLE,
	LARGE_TURN_RIGHT_TO_ORTHOGONAL_GENTLE,
	GENTLE_TO_GENTLE_LEFT_BANK_DIAG,
	GENTLE_TO_GENTLE_RIGHT_BANK_DIAG,
	GENTLE_LEFT_BANK_TO_GENTLE_DIAG,
	GENTLE_RIGHT_BANK_TO_GENTLE_DIAG,
	LEFT_BANK_TO_GENTLE_LEFT_BANK_DIAG,
	RIGHT_BANK_TO_GENTLE_RIGHT_BANK_DIAG,
	GENTLE_LEFT_BANK_TO_LEFT_BANK_DIAG,
	GENTLE_RIGHT_BANK_TO_RIGHT_BANK_DIAG,
	GENTLE_LEFT_BANK_DIAG,
	GENTLE_RIGHT_BANK_DIAG,
	FLAT_TO_GENTLE_LEFT_BANK_DIAG,
	FLAT_TO_GENTLE_RIGHT_BANK_DIAG,
	GENTLE_LEFT_BANK_TO_FLAT_DIAG,
	GENTLE_RIGHT_BANK_TO_FLAT_DIAG,
	LARGE_TURN_LEFT_BANK_TO_DIAG_GENTLE,
	LARGE_TURN_RIGHT_BANK_TO_DIAG_GENTLE,
	LARGE_TURN_LEFT_BANK_TO_ORTHOGONAL_GENTLE,
	LARGE_TURN_RIGHT_BANK_TO_ORTHOGONAL_GENTLE,
	STEEP_TO_VERTICAL_DIAG,
	VERTICAL_TO_STEEP_DIAG,
	VERTICAL_DIAG,
	VERTICAL_TWIST_LEFT_TO_DIAG,
	VERTICAL_TWIST_RIGHT_TO_DIAG,
	VERTICAL_TWIST_LEFT_TO_ORTHOGONAL,
	VERTICAL_TWIST_RIGHT_TO_ORTHOGONAL,
	VERTICAL_BOOSTER,
	NUM_TRACK_SECTIONS 
};



typedef struct
{
	int32_t track_mask_op;
	uint32_t num_rects;
	int32_t x_offset;
	int32_t y_offset;
	rect_t* rects;
}mask_t;

typedef struct
{
	int flags;
	int num_sprites;
	mask_t* masks;
}view_t;

#define NUM_TRACK_SECTIONS 150
#define NUM_MODELS 23
#define SUPPORT_SPECIAL_START SUPPORT_SPECIAL_STEEP_TO_VERTICAL

typedef struct
{
	char suffix[256];
	uint32_t flags;
	uint64_t groups;
	int32_t lift_offset;
	uint32_t models_loaded;
	mesh_t mesh;
	mesh_t mesh_tie;
	mesh_t tie_mesh;
	mesh_t mask;
	mesh_t models[NUM_MODELS];
	float length;
	float brake_length;
	float tie_length;
	float pivot;
	float z_offset;
	float support_spacing;
	float offset_table[88];
	view_t masks[NUM_TRACK_SECTIONS][4];
}track_type_t;

typedef struct
{
	vector3_t position;
	vector3_t normal;
	vector3_t tangent;
	vector3_t binormal;
}track_point_t;

typedef struct
{
	const char* name;
	unsigned int flags;
	track_point_t (*curve)(float distance);
	float length;
}track_section_t;

extern track_section_t track_sections[NUM_TRACK_SECTIONS];

int write_track_type(context_t* context,track_type_t* track_type,json_t* sprites,float offset_table[88],const char* base_dir,const char* output_dir);
